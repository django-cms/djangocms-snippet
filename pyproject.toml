[build-system]
requires = ["setuptools >= 40.6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "djangocms-snippet"
dynamic = ["version"]
authors = [
  {name = "Divio AG", email = "info@divio.ch"},
]
maintainers = [
  {name = "Django CMS Association and contributors", email = "info@django-cms.org"}
]
license = {file = "LICENSE"}
description = "Adds snippet plugin to django CMS."
readme = "README.rst"
requires-python = ">=3.9"
dependencies = [
    'django-cms>=3.7',
]
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.2",
    "Framework :: Django CMS",
    "Framework :: Django CMS :: 3.8",
    "Framework :: Django CMS :: 3.9",
    "Framework :: Django CMS :: 3.10",
    "Framework :: Django CMS :: 3.11",
    "Framework :: Django CMS :: 4.0",
    "Framework :: Django CMS :: 4.1",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
]

[project.optional-dependencies]
static-ace = ["djangocms-static-ace"]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]

[tool.setuptools.dynamic]
version = {attr = "djangocms_snippet.__version__"}

[project.urls]
"Bug Tracker" = "https://github.com/django-cms/djangocms-snippet/issues"
Changelog = "https://github.com/django-cms/djangocms-snippet/blob/master/CHANGELOG.rst"
Repository = "https://github.com/django-cms/djangocms-snippet"
Support = "https://www.django-cms.org/slack/"

[tool.coverage.run]
branch = true
parallel = true
source = [
    "djangocms_snippet",
    "tests",
]

[tool.coverage.paths]
source = [
    "src",
    ".tox/**/site-packages",
]

[tool.coverage.report]
show_missing = true

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true


[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
line-length = 120
lint.select = [
  "E",    # pycodestyle errors
  "W",    # pycodestyle warnings
  "F",    # pyflakes
  "I",    # isort
  "FBT",  # flake8-boolean-trap
  "B",    # flake8-bugbear
  "C",    # flake8-comprehensions
  "DJ",   # flake8-django
  "INT",  # flake8-gettext
  "PIE",  # flake8-pie
  "SIM",  # flake8-simplify
  "PGH",  # pygrep-hooks
  "PLE",  # pylint error
  "PLR",  # pylint refactor
  "PLW",  # pylint warning
  "UP",   # pyupgrade
  "C901", # mccabe
  "N",    # pep8-naming
  "YTT",  # flake8-2020,
  "RUF"
]

exclude = [
  ".eggs",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".env",
  ".venv",
  "**migrations/**",
  "venv",
]

lint.ignore = [
  "E501",  # line-too-long
  "W191",  # tab-indentation
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401"  # unused-import
]
"test_plugins.py" = [
  "FBT003",  # Boolean positional value in function call
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
  "djangocms_snippet",
]
extra-standard-library = ["dataclasses"]
